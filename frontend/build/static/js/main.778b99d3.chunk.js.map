{"version":3,"sources":["../node_modules/webpack/hot sync nonrecursive /^/log$","Components/Form/Form.jsx","Components/Navigation/Navigation.jsx","Components/About/About.jsx","App.js","serviceWorker.js","index.js"],"names":["map","./log","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","Form","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","dataFlow","url","fetch","then","response","json","JSON","stringify","catch","error","console","log","message","state","symbol","data","setState","react_default","a","createElement","Component","Navigation","Container","fluid","Row","Col","md","span","className","Image","src","alt","style","color","marginTop","ButtonGroup","justified","Button","href","margin","Card","body","inverse","CardTitle","CardText","marginLeft","About","mdOffset","App","Components_Navigation_Navigation","Components_Form_Form","Components_About_About","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.778b99d3.chunk.js","sourcesContent":["var map = {\n\t\"./log\": 43\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 42;","import React, { Component } from 'react';\r\n\r\nclass Form extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            url : 'https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=' + this.props.symbol + \r\n            '&interval=5min&outputsize=full&apikey=G4PTCOL5F6R1SMMK',\r\n            data: null\r\n        }\r\n    }\r\n\r\n    dataFlow = (url) => {\r\n        return fetch (url)\r\n            .then(response => response.json())\r\n            .then(response => JSON.stringify(response))\r\n            .catch(error => console.log(error.message))\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({data: this.dataFlow(this.state.url)})\r\n        console.log(this.dataFlow(this.state.url))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport './Navigation.css';\r\nimport {Row, Col, Container, Image, ButtonGroup} from 'react-bootstrap';\r\nimport {Button, Card, CardText, CardTitle} from 'reactstrap';\r\n\r\nconst imgPath = \"/assets/img.jpg\";\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <div>\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col md = {{span: 3}} className = \"center\">\r\n                        <Image src = {imgPath} alt = \"avatar\" className = \"image\"/>\r\n                    </Col>\r\n                    <Col md = {{span: 4}} className = \"center\">\r\n                        <h1 style = {{color: '#ffffff', marginTop: 50}}>\r\n                            {\"Stock Price Predktar\"}\r\n                        </h1>\r\n                    </Col>\r\n                    <Col md = {{span: 5}} className = \"center\">\r\n                        <ButtonGroup justified>\r\n                            <Button href=\"https://www.google.com\" color = \"success\" style = {{color: 'white', margin: 20}}>Nhộng</Button>\r\n                            <Button href=\"https://www.pornhub.com\" color = \"success\" style = {{color: 'white', margin: 20}}>Béo</Button>\r\n                        </ButtonGroup>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col md = {{span: 6}} className = \"center\">\r\n                        <Card body inverse className = \"card\">\r\n                            <CardTitle><h3 style = {{color: '#ffffff'}}>Real-time Stock Price</h3> </CardTitle>\r\n                            <CardText style = {{color: '#ffffff'}}>See data of stock price market. Joint Stock Companies, Cryptocurrencies.</CardText>\r\n                            <Button style = {{marginTop: 20, marginLeft: 20}}> Let's gooo =))</Button>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md = {{span: 6}} className = \"center\">\r\n                        <Card body inverse className = \"card\">\r\n                            <CardTitle><h3 style = {{color: '#ffffff'}}>Predik the stock price!!!</h3> </CardTitle>\r\n                            <CardText style = {{color: '#ffffff'}}>This AI machine will predict stock price in the short term based on companies historicla data</CardText>\r\n                            <Button style = {{marginTop: 20, marginLeft: 20}}>Let's go, yay =))</Button>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n} from 'react-bootstrap';\r\nimport {\r\n    Button\r\n} from 'reactstrap';\r\nimport './About.css';\r\n\r\nconst About = () => {\r\n    return (\r\n        <div >\r\n            <Container fluid className = \"about\">\r\n                <Row className = \"center\">\r\n                    <h4>\r\n                        All right reserved to Alex Nguyen | Gettysburg College Class of 2022.\r\n                    </h4>\r\n                </Row>\r\n                <Row className = \"center\">\r\n                    <Col md = {{span: 8, mdOffset: 2}}>\r\n                        This is Col\r\n                    </Col>\r\n                    <Col md = {{span: 4}}>\r\n                        This is another col\r\n                    </Col>\r\n                </Row>\r\n            </Container>    \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default About;","import React, { Component } from 'react';\nimport './App.css';\nimport Form from './Components/Form/Form';\nimport Navigation from './Components/Navigation/Navigation'\nimport About from './Components/About/About'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"body\">\n        <Navigation />\n        <Form symbol = \"GE\"/>\n        <About />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}